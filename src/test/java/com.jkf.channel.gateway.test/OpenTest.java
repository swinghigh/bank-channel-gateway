package com.jkf.channel.gateway.test;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.jkf.channel.gateway.constant.OpenMethodEnum;
import com.jkf.channel.gateway.utils.HttpUtil;
import com.jkf.channel.gateway.utils.SecurityUtil;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang.StringUtils;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * @author xiangyu
 * @date 2023/11/1 9:12
 */
@Slf4j
public class OpenTest {

    private static String merPublicKey="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmw9bDg+UF8QZPB3bi+RMRswcSvJdgEe7lntuzxNgtg8zyHmwL6GsQltsDgII+f+9NCn/PM/w3+fZyHPva1bwR/ZPe4lo42DBnpFMIRrb9X+MtYT4nBdyDV2lHvj7v6CyU7axBjUOti0Z8iUwbbo1ykcxX0E0jKB6//rk1ak9Ht6hF8QZJ2CymcB1S+GasHmwqllMJOD780fNtMQCv+BlndJpTviuexDOvgXXXSl8+1SC36n1S92MpGpFdJ1cldUgmaI6uHUiIRW1S5HmyrFWb5YwECGHvI6oFytjkl4yF8gqIFVLh+/ZZeYSTydVPDlzBJIHseoV456B4Unesw2Y/wIDAQAB";//机构公钥
    private static String mer_priKey="MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCbD1sOD5QXxBk8HduL5ExGzBxK8l2AR7uWe27PE2C2DzPIebAvoaxCW2wOAgj5/700Kf88z/Df59nIc+9rVvBH9k97iWjjYMGekUwhGtv1f4y1hPicF3INXaUe+Pu/oLJTtrEGNQ62LRnyJTBtujXKRzFfQTSMoHr/+uTVqT0e3qEXxBknYLKZwHVL4ZqwebCqWUwk4PvzR820xAK/4GWd0mlO+K57EM6+BdddKXz7VILfqfVL3YykakV0nVyV1SCZojq4dSIhFbVLkebKsVZvljAQIYe8jqgXK2OSXjIXyCogVUuH79ll5hJPJ1U8OXMEkgex6hXjnoHhSd6zDZj/AgMBAAECggEBAJG9hxnaLpl/6TAF6Dq+I6tPYTBYSOWvhnNUJLxhPD8iXsuJBL5gOOZNw2wPIZzIcG89IfdogsAQzTOJNHkxR7p7mg1FA97jLFj7vBBJjIBcmEZsardbmglSAUbxQr3ELphcWFq7N86m6YIczj30DWbIL3GWeevLUpCSos7nuNjvdG9Ugd71fXb0h7Vrb/Meku7y4sfske4na/BvxzE35I0z+PtdBTy1ZlFzOuLC7AD8PbdSr49DWl5GjBWE0SR+J/tI7ZHGbBg3bOrS4vQayKICzREehl0tPX+32BdXPv4P2TVbmgI5MVa2B6Kxi2mzcMoW0K0kXLbTn3UQLg77L2ECgYEA0hrJKbX27mOmRPTwjTEPyPJwhkefz2jFzz37WthA3Fud1wkcI5F7Dgn/YEzClRvMXw+Hh8Gp3Mxo0ooqYhZsOYp3ILyo3yj6SJqA5LtVq+8jgylc+yt5wuSq4WNOlyl5AOtmidRgkiY4pYvLvAv2IJ7d++ioe4cpKga3hNADfzcCgYEAvO5uLPZITx5yTRdEan1VYfkAPztsZ7PaqmOeG8cTzgb2vws6m0eh02SuYcKz3O08uPsycx4NHNTrCdGzYHaeXxYUg6zvH1urdTGadr04a5XSAlLiE0elqXBJmbwowXwQ8NA8+62UEVza48uwlnT/06RRpVmKCtNI47/gC/DZSHkCgYAWVrK8tJQklIPBISnSWT0MaHp+TG85ZjJh7n0jE4sR4svNaTKMtZMX0whL/N1TbTk1gjkuvfCJgVJD0FzhQPEQzSANYwGxeHHj9kluCFz7gtmLwIIaUm0Hw7hHbn+UotwytNSaIvKBl36+Wza2L69jmICRoBMJzz0ZMs2gWV2F0QKBgAMsikNNG+fgXhE3e9nCI0YTFdL6H5caaWkFZWmYDZgfe9O3z5M+P9S6U0enKrhib+u3pKBUd+ntFcnDcR0EwSJdz5hqtlWzh4zfeXXXNfRwvud1FwE16e2Pyly/0Xt2px40kWG1B9DG25KKIHxWmNmoYArEF1KZPBc/aPcqY6wZAoGAcs3GoV0DMoPyPAD/+bYaVpne7qcr/jVjZZRlcKLgjUz+Eld9P1VsSi6NfLbqXX0wpX/8RoRktF4e4r75qK0zuFF/xO/ysV3DnSXR/jlALtDk3IpjxpWkKv7FwqK+jA2RqO+jivYLh01st4WKHZ7opRQTirVylVDn9v2qSsMKMx0=";//机构私钥
    private static String orgNo="1000000000";//机构号
    private static String pt_pubKey="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs8I/gNT/H32o/JIw/1kK+jXNQMko2P0/EVkaRTjnhVM3U/687r4czt20Ja5Kiiguf4OvqU/zQC1K/78/gqGvhgBQwF5a4zSWQPL4fKD2fhx4YEAxsUFhJxwr6TdLbzuVaM62zsrSY4DY6UedFDxi7aC9NPqdOmUWBpIp6c01/jQpTgrNAX+0PEA5CSojX8023stnYz2+WcZ5PXrcgsUQ5usXdF8+cLN9EkTXcNEgIWGSzjo0KRpVUqA2OpPHbEW4GEM4lv+ll4GTFnRJADJY4pUB1skqBXEnLPlkCaQX1EaXFeHyklBRu2fJHnmLS2nTyUC9leBt9JO7QbXz0ivXrwIDAQAB";//机构公钥
    private static String payUrl="http://127.0.0.1:8817/openChannel/buss";//请求地址

    @Test
    public void t(){

        Map<String,Object> reqData=new HashMap<>();
        reqData.put("test","测试");
        commonRequest(reqData, OpenMethodEnum.TEST.getMethod());
    }




    private String commonRequest(Map<String,Object> reqData, String method){
        Map<String,Object> map=new HashMap<>();
        String timestamp=System.currentTimeMillis()+"";
        map.put("orgNo",orgNo);
        map.put("reqId", UUID.randomUUID().toString());
        map.put("timestamp",timestamp);
        map.put("version","1.0");
        map.put("signType","RSA");
        map.put("method",method);
        log.info("reqData明文:"+ JSONObject.toJSONString(reqData));
        try {
            String value = SecurityUtil.publicEncrypt(JSONObject.toJSONString(reqData), pt_pubKey);
            log.info("reqData秘文:" + value);
            map.put("reqData", value);
            map.put("sign", SecurityUtil.sign(map, mer_priKey));
            log.info("签名:" + map.get("sign"));
            log.info("请求报文:" + JSON.toJSONString(map));
            String response = HttpUtil.sendJson(payUrl, JSONObject.toJSONString(map));
            log.info("响应报文:" + response);
            JSONObject res = JSONObject.parseObject(response);
            //验证签名
//        String data="";
//        String sign=res.getString("sign");
            if (SecurityUtil.verifyJsonStr(response, pt_pubKey)) {
                System.out.println("签名通过");
            } else {
                System.out.println("签名失败");
            }
            String respData = res.getString("respData");
            if(!StringUtils.isEmpty(respData)) {
                String decryptValue = SecurityUtil.privateDecrypt(respData, mer_priKey);
                log.info("respData:" + decryptValue);
                return decryptValue;
            }
            return response;
        }catch (Exception e){
            log.error("出现异常",e);
        }
        return "";
    }
}
